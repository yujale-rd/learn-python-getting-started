# 在 Python 中，range() 函数用于生成一系列的整数，通常用于循环中的计数。它可以接受最多三个参数（起始值、结束值、步长），并生成一个指定范围的整数序列。

# range(stop)

# 最简单的形式是传入一个参数 stop，生成从 0 开始的整数序列，直到 stop 之前的数为止（不包括 stop 本身）。

for i in range(5):
    print(i)
# 输出:
# 0
# 1
# 2
# 3
# 4

# 自定义起始值和结束值
# range(start, stop)

# 通过传入两个参数 start 和 stop，可以自定义起始值。生成的序列从 start 开始，到 stop 之前结束。
for i in range(1, 5):
    print(i)
# 输出:
# 1
# 2
# 3
# 4

# 自定义步长
# range(start, stop, step)

# 通过传入第三个参数 step，可以自定义步长。步长决定了每次增加或减少的量。

for i in range(1, 10, 2):
    print(i)
# 输出:
# 1
# 3
# 5
# 7
# 9

# 反向序列
# 生成递减序列
# 通过给 step 传递负数，可以生成一个递减的整数序列。
for i in range(10, 0, -2):
    print(i)

# 在这个例子中，range(10, 0, -2) 生成了 [10, 8, 6, 4, 2]，从 10 开始，每次减 2，直到大于 0。

"""
	1.	range() 的惰性生成特性：
	•	range() 不会立即生成所有元素，而是按需动态生成，节省内存。
	2.	避免无意义的嵌套循环：
	•	嵌套循环复杂度高，容易降低代码性能和可读性。
	3.	负步长注意顺序：
	•	当使用负步长时，start 必须大于 stop，否则不会生成任何值。
"""


for i in range(5, 0, -1):
    print(i)