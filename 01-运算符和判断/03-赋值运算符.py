# 赋值运算符 (=)
# 赋值运算符用于将值或表达式的结果赋给变量。在 Python 中，赋值运算符不仅包括简单的 =，还有许多组合赋值运算符、链式赋值、多重赋值等功能

# 基本赋值运算符 （=） 用于将右侧的值赋给左侧的变量。


x = 5  # 将 5 赋值给变量 x
y = "Hello"  # 将字符串 "Hello" 赋值给变量 y

# 组合赋值运算符 组合赋值运算符将某个运算与赋值结合在一起，简化了代码的书写。

# +=: 加法赋值运算符，将右侧的值加到左侧的变量上。

x = 5
x += 3  # 相当于 x = x + 3
print(x)  # 输出: 8

# -=: 减法赋值运算符，将右侧的值从左侧的变量中减去。

x = 5
x -= 2  # 相当于 x = x - 2
print(x)  # 输出: 3

# *=: 乘法赋值运算符，将左侧的变量乘以右侧的值。
x = 4
x *= 2  # 相当于 x = x * 2
print(x)  # 输出: 8

# /=: 除法赋值运算符，将左侧的变量除以右侧的值。

x = 10
x /= 2  # 相当于 x = x / 2
print(x)  # 输出: 5.0

# //=: 整除赋值运算符，将左侧的变量进行整除。

x = 10
x //= 3  # 相当于 x = x // 3
print(x)  # 输出: 3

# %=: 取模赋值运算符，将左侧的变量取模右侧的值。

x = 10
x %= 3  # 相当于 x = x % 3
print(x)  # 输出: 1

# **=: 幂赋值运算符，将左侧的变量进行幂运算。

x = 2
x **= 3  # 相当于 x = x ** 3
print(x)  # 输出: 8

# 多重赋值
#
# 可以同时给多个变量赋值，要求变量数量和值数量相等。，使用逗号分隔：

a, b, c = 1, 2, 3
print(a, b, c)  # 输出: 1 2 3

# 链式赋值
#
# 多个变量同时获取相同的值。

a = b = c = 10  # a, b, c 都被赋值为 10

# 变量交换
#
# 可以直接交换两个变量的值，不需要借助中间变量。
a, b = 5, 10
a, b = b, a  # 交换 a 和 b 的值，a = 10, b = 5

"""
6. 解包赋值

解包赋值可以从可迭代对象（如列表、元组）中提取元素并赋值给多个变量：
"""

lst = [1, 2, 3]
a, b, c = lst  # 将列表中的值解包到变量中
print(a, b, c)  # 输出: 1 2 3

# 赋值运算符的特性

# - 不可变类型：对于不可变类型（如整数、字符串和元组），赋值运算符会创建一个新的对象。例如，当给一个整数变量赋新值时，实际上是创建了一个新的整数对象。
x = 10
y = x
x = 20  # 修改 x 的值
print(x, y)  # 输出: 20 10 (x 和 y 是独立的)
# - 可变类型：对于可变类型（如列表、字典和集合），赋值运算符会直接修改原对象。例如，对列表进行操作时，仍然是操作同一个列表对象。
lst1 = [1, 2, 3]
lst2 = lst1
lst1.append(4)  # 修改 lst1
print(lst1, lst2)  # 输出: [1, 2, 3, 4] [1, 2, 3, 4] (lst1 和 lst2 指向同一个对象)

